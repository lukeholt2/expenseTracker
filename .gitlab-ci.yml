variables:
  API_TOKEN: "$ACCESS_TOKEN"
  FORCE_DEPLOY: "false"
  
include:
  - project: gitlab-instance-8c9d9f19/dev-tools/continuous-integration
    file: 
      - /node/install.gitlab-ci.yml
      - /node/audit.gitlab-ci.yml
      - ssh.gitlab-ci.yml
      - create-release.gitlab-ci.yml
      - generate-changelog.gitlab-ci.yml
      - workflow.gitlab-ci.yml

audit-modules:
  variables:
    AUDIT_LEVEL: high


register-deploy-version:
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "master"
    - if: $FORCE_DEPLOY == "true"
  before_script:
    - !reference [ .install-node, before_script ]
    - apt install curl -y
  script:
    - VERSION=$( npm pkg get version | tr -d '"')
    - echo "VERSION=$VERSION" >> release.env
    - 'curl --request POST --header "PRIVATE-TOKEN: ${API_TOKEN}" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/repository/tags?tag_name=${VERSION}&ref=master"'
  artifacts:
    reports:
      dotenv: release.env

deploy:
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  stage: deploy
  needs: ["register-deploy-version"]
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "master"
    - if: $FORCE_DEPLOY == "true"
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin
    - docker build -f Dockerfile -t $CI_REGISTRY_IMAGE:$VERSION .
    - docker push $CI_REGISTRY_IMAGE:$VERSION
  tags:
    - docker
